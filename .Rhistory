library(tidyverse)
# read file
fnamePath <- './dataExtract/shapefiles/raw-sf/'
fname <- "LGA_2020_AUST.shp"
# generate raw data files for NSW LGA boundaries
lgaData <- st_read(paste(fnamePath,fname,sep=""))
lgaId <- lgaData$LGA_CODE20
lgaNames <- lgaData$LGA_NAME20
lgaNSW <- lgaData$STE_NAME16 == "New South Wales"
lgaIdNSW <- lgaId[lgaNSW]
lgaNamesNSW <- lgaNames[lgaNSW]
lgaNSW <- data.frame(lgaIdNSW,lgaNamesNSW)
save(lgaNSW, file='./dataExtract/r-data/lgaNSW.dat')
# define a quick subset function
## ToDo: possibly rescale the polygon for smaller foot print;
subset_sf <- function(sf_name, query) {
rawOutput <- st_read(sf_name, query=query)
#compress the polygon for small foot print
compressOutput <- st_simplify(rawOutput, dTolerance=150)
#output
geoJsonOutput <- sf_geojson(compressOutput)
return(geoJsonOutput)
}
# build an array of query strings to use for the extraction of data
extractQuery <- paste("SELECT * FROM \"",
unlist(strsplit(fname, ".", fixed=TRUE))[1],
"\" WHERE LGA_CODE20 = '",
lgaIdNSW,
"'",sep='')
# define the output path
outPath <- "./dataExtract/web-output/"
# loop - extract, convert, output
for (i in 1:length(lgaIdNSW)) {
geoJSON <- subset_sf(paste(fnamePath,fname,sep=""),
extractQuery[i])
write(geoJSON,file=paste(outPath,lgaIdNSW[i],'.geojson',sep=''))
}
# load packages;
library(sf)
library(geojsonsf)
library(tidyverse)
# read file
fnamePath <- './dataExtract/shapefiles/raw-sf/'
fname <- "LGA_2020_AUST.shp"
# generate raw data files for NSW LGA boundaries
lgaData <- st_read(paste(fnamePath,fname,sep=""))
lgaId <- lgaData$LGA_CODE20
lgaNames <- lgaData$LGA_NAME20
lgaNSW <- lgaData$STE_NAME16 == "New South Wales"
lgaIdNSW <- lgaId[lgaNSW]
lgaNamesNSW <- lgaNames[lgaNSW]
lgaNSW <- data.frame(lgaIdNSW,lgaNamesNSW)
save(lgaNSW, file='./dataExtract/r-data/lgaNSW.dat')
# define a quick subset function
## ToDo: possibly rescale the polygon for smaller foot print;
subset_sf <- function(sf_name, query) {
rawOutput <- st_read(sf_name, query=query)
#compress the polygon for small foot print
compressOutput <- st_simplify(rawOutput, dTolerance=150)
#output
geoJsonOutput <- sf_geojson(compressOutput)
return(geoJsonOutput)
}
# build an array of query strings to use for the extraction of data
extractQuery <- paste("SELECT * FROM \"",
unlist(strsplit(fname, ".", fixed=TRUE))[1],
"\" WHERE LGA_CODE20 = '",
lgaIdNSW,
"'",sep='')
# define the output path
outPath <- "./dataExtract/web-output/"
# loop - extract, convert, output
for (i in 1:length(lgaIdNSW)) {
geoJSON <- subset_sf(paste(fnamePath,fname,sep=""),
extractQuery[i])
write(geoJSON,file=paste(outPath,lgaIdNSW[i],'.geojson',sep=''))
}
library(readxl)
library(tidyverse)
library(jsonlite)
library(scales)
# load profits per LGA
filePath <- 'dataExtract/clubs/'
fileName <- 'clubs-gaming-machine-lga-report-20201201-to-20210531.xlsx'
rawNetProfit <- read_xlsx(path = paste(filePath,fileName,sep=''),sheet='Clubs', skip = 3)
rawNetProfit <- rawNetProfit %>%
arrange(desc(`Net Profit`)) %>%
mutate(rank = row_number()-1,
profit = dollar(round(`Net Profit`/1000)*1000),
tax = dollar(round(Tax/1000)*1000))
View(rawNetProfit)
rawNetProfit[is.na(rawNetProfit$`Local Government Area (LGA)`)] <- 'NSW'
rawNetProfit$`Local Government Area (LGA)`[is.na(rawNetProfit$`Local Government Area (LGA)`)] <- 'NSW'
View(rawNetProfit)
rawNetProfit$`Local Government Area (LGA)`
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(test = strsplit(`Local Government Area (LGA)`, "\r\n"))
View(expandNetProfit)
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(test = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(test) %>%
filter(test != "")
View(expandNetProfit)
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(test = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(test)
View(expandNetProfit)
expandNetProfit <- rawNetProfit %>%
mutate(`Local Government Area (LGA)` = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(`Local Government Area (LGA)`) %>%
filter(`Local Government Area (LGA)` != "")
View(expandNetProfit)
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(LgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(LgaName) %>%
filter(LgaName != "")
View(expandNetProfit)
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
View(lgaNSW)
library(readxl)
library(tidyverse)
library(jsonlite)
library(scales)
# load profits per LGA
filePath <- 'dataExtract/clubs/'
fileName <- 'clubs-gaming-machine-lga-report-20201201-to-20210531.xlsx'
rawNetProfit <- read_xlsx(path = paste(filePath,fileName,sep=''),sheet='Clubs', skip = 3)
rawNetProfit <- rawNetProfit %>%
arrange(desc(`Net Profit`)) %>%
mutate(rank = row_number()-1,
profit = dollar(round(`Net Profit`/1000)*1000),
tax = dollar(round(Tax/1000)*1000))
# Assign NSW Total
rawNetProfit$`Local Government Area (LGA)`[is.na(rawNetProfit$`Local Government Area (LGA)`)] <- 'NSW'
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(lgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(lgaName) %>%
filter(lgaName != "")
# Add the LGA codes
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
# merge on LGA code
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
View(expandNetProfit)
View(lgaNSW)
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
%>% filter(is.na(lgaIdNSW))
View(expandNetProfit)
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(lgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(lgaName) %>%
filter(lgaName != "")
# Add the LGA codes
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
# merge on LGA code
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
View(expandNetProfit)
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean")) %>%
filter(is.na(lgaIdNSW))
View(expandNetProfit)
expandNetProfit$lgaIdNSW
is.na(expandNetProfit$lgaIdNSW)
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean")) %>%
filter(is.na(lgaIdNSW))
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean")) %>% filter(is.na(lgaIdNSW))
naCheck < - expandNetProfit %>% filter(is.na(lgaIdNSW))
naCheck <- expandNetProfit %>% filter(is.na(lgaIdNSW))
View(naCheck)
View(lgaNSW)
naCheck <- expandNetProfit %>%
filter(is.na(lgaIdNSW)) %>%
mutate(lgaNameShire=paste(lgaName,'Shire'))
View(naCheck)
naCheck <- left_join(naCheck,lgaNSW, by=c("lgaNameShire"="lgaNameClean"))
View(naCheck)
View(lgaNSW)
expandNetProfit <- expandNetProfit %>% mutate(lgaName = if_else(lgaName %in% addShire,paste(lagName,'Shire'),lagName))
addShire <- c('Greater Hume','Sutherland','The Hills','Upper Hunter','Upper Lachlan','Warrumbungle');
expandNetProfit <- expandNetProfit %>% mutate(lgaName = if_else(lgaName %in% addShire,paste(lagName,'Shire'),lagName))
expandNetProfit <- expandNetProfit %>% mutate(lgaName = if_else(lgaName %in% addShire,paste(lgaName,'Shire'),lagName))
expandNetProfit <- expandNetProfit %>% mutate(lgaName = if_else(lgaName %in% addShire,paste(lgaName,'Shire'),lgaName))
View(expandNetProfit)
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(lgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(lgaName) %>%
filter(lgaName != "")
# Add the LGA codes
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
# Patch names on the Pokies reports
addShire <- c('Greater Hume','Sutherland','The Hills','Upper Hunter','Upper Lachlan','Warrumbungle');
addRegional <- c('Queanbeyan-Palerang','Bathurst','Armidale','Snowy Monaro','Cootamundra-Gundagai')
addValley <- c('Nambucca')
expandNetProfit <- expandNetProfit %>%
mutate(lgaName = if_else(lgaName %in% addShire,paste(lgaName,'Shire'),lgaName),
lgaName = if_else(lgaName %in% addRegional,paste(lgaName,'Regional'),lgaName),
lgaName = if_else(lgaName %in% addValley,paste(lgaName,'Valley'),lgaName))
View(expandNetProfit)
# merge on LGA code
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
View(expandNetProfit)
View(lgaNSW)
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(lgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(lgaName) %>%
filter(lgaName != "")
# Add the LGA codes
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
# Patch names on the Pokies reports
addShire <- c('Greater Hume','Sutherland','The Hills','Upper Hunter','Upper Lachlan','Warrumbungle');
addRegional <- c('Queanbeyan-Palerang','Bathurst','Armidale','Snowy Monaro','Cootamundra-Gundagai')
addValley <- c('Nambucca')
recode <- 'Unincorporated Far West'
expandNetProfit <- expandNetProfit %>%
mutate(lgaName = if_else(lgaName %in% addShire,paste(lgaName,'Shire'),lgaName),
lgaName = if_else(lgaName %in% addRegional,paste(lgaName,'Regional'),lgaName),
lgaName = if_else(lgaName %in% addValley,paste(lgaName,'Valley'),lgaName),
lgaName = if_else(lgaName %in% recode,'Unincorporated NSW',lgaName))
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
View(expandNetProfit)
expandNetProfit <- expandNetProfit %>% mutate(lgaIdNSW = if_else(lgaName='NSW','nsw',lgaIdNSW))
expandNetProfit <- expandNetProfit %>% mutate(lgaIdNSW = if_else(lgaName=='NSW','nsw',lgaIdNSW))
View(expandNetProfit)
expandNetProfit <- expandNetProfit %>%
mutate(lgaIdNSW = if_else(lgaName=='NSW','nsw',lgaIdNSW),
lgaNameCombine = `Local Government Area (LGA)`)
View(expandNetProfit)
# prepare data for JSON dump
keepLGAData <- expandNetProfit %>%
select(lgaIDsNSW,
lgaName,
lgaNameCombine,
rank,
profit,
tax,
`Premises Count`,
`Electronic Gaming Machine numbers\r\nas at 30 May 2021`) %>%
rename(EGMs=`Electronic Gaming Machine numbers\r\nas at 30 May 2021`,
premisesCount=`Premises Count`);
# prepare data for JSON dump
keepLGAData <- expandNetProfit %>%
select(lgaIdNSW,
lgaName,
lgaNameCombine,
rank,
profit,
tax,
`Premises Count`,
`Electronic Gaming Machine numbers\r\nas at 30 May 2021`) %>%
rename(EGMs=`Electronic Gaming Machine numbers\r\nas at 30 May 2021`,
premisesCount=`Premises Count`);
View(keepLGAData)
lgaId <- unique(keepLGAData$lgaIdNSW)
View(lgaNSW)
for (i in 1:length(lgaId)) {
extract <- keepLGAData %>% filter(lgaIdNSW == lgaId[i])
json <- toJSON(extract)
write(json, file=paste('./dataExtract/web-output/',lgaId[i],'-stats.json',sep=''))
}
library(tidyverse)
# load profits per LGA
filePath <- './dataExtract/population/erp-age-sex-lga-2020.xls'
fileName <- 'erp-age-sex-lga-2020.xls'
population <- read_xlsx(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 9)
# load profits per LGA
filePath <- './dataExtract/population/'
fileName <- 'erp-age-sex-lga-2020.xls'
population <- read_xlsx(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 9)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 9)
View(population)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7)
View(population)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7) %>%
select(-1,-2,-4)
View(population)
View(population)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7)
View(population)
dropCols <- c(1,2,4,5,6,7)
populationSelect <- population %>% select(-dropCols)
populationSelect <- population %>% select(-all_of(dropCols))
View(populationSelect)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7)
dropCols <- c(1,2,4,5,6,7,23)
populationSelect <- population %>% select(-all_of(dropCols))
View(populationSelect)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7) %>%
filter(1 == '1')
View(population)
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7) %>%
filter(`ASGS 2020` == '1')
View(population)
dropCols <- c(1,2,4,5,6,7,23)
populationSelect <- population %>% select(-all_of(dropCols))
View(populationSelect)
populationSelect <- population %>%
select(-all_of(dropCols)) %>%
mutate(`15-19`=`15-19`*0.2)
populationSelect <- population %>%
select(-all_of(dropCols)) %>%
mutate(`15–19`=`15–19`*0.2)
populationSelect <- population %>%
select(-all_of(dropCols))
View(populationSelect)
colnames(populationSelect)
populationSelect <- population %>%
select(-all_of(dropCols)) %>%
mutate(`18–19`=as.numeric(`15–19`) * 0.2)
View(populationSelect)
populationSelect <- population %>%
select(-all_of(dropCols)) %>%
mutate(`18–19`=as.numeric(`15–19`) * 0.2) %>%
select(-`15–19`)
View(populationSelect)
adultsLga <- rowSums(as.numeric(populationSelect[,-1]),na.rm = T)
adultsLga <- rowSums(as.numeric(unlist(populationSelect[,-1])),na.rm = T)
adultsLga <- rowSums(as.numeric(as.data.frame(populationSelect[,-1])),na.rm = T)
View(populationSelect)
populationSelect[,-1]
as.data.frame(populationSelect[,-1])
as.numeric(as.data.frame(populationSelect[,-1]))
adults <- as.data.frame(populationSelect[,1])
View(adults)
adults <- as.data.frame(populationSelect[,-1])
adults <- transform(as.data.frame(populationSelect[,-1], char=as.numeric(char))
)
View(adults)
View(adults)
View(adults)
adults <- transform(as.data.frame(populationSelect[,-1], char=as.numeric(char)))
View(adults)
adultsLga <- rowSums(.,na.rm = T)
adultsLga <- rowSums(na.rm = T)
adultsLga <- rowSums(adults,na.rm = T)
adultsLga <- rowSums(as.numeric(adults),na.rm = T)
adults <-as.data.frame(populationSelect[,-1], char=as.numeric(char))
i <- c(1:15)
data[ , i] <- apply(data[ , i], 2, function(x) as.numeric(as.character(x)))
data[ , i] <- apply(adults[ , i], 2, function(x) as.numeric(as.character(x)))
adults[ , i] <- apply(adults[ , i], 2, function(x) as.numeric(as.character(x)))
adults <-as.data.frame(populationSelect[,-1], char=as.numeric(char))
adults[ , c(1:15)] <- apply(adults[ , c(1:15)], 2, function(x) as.numeric(as.character(x)))
adultsLga <- rowSums(as.numeric(adults),na.rm = T)
adultsLga <- rowSums(adults,na.rm = T)
adultsLga
adultsLga <- floor(rowSums(adults,na.rm = T))
adults <-as.data.frame(populationSelect, char=as.numeric(char))
View(adults)
adults <-as.data.frame(populationSelect, char=as.numeric(char)) %>% rename(lgaCode=`...3`)
View(adults)
adults[ , c(2:16] <- apply(adults[ , c(2:16)], 2, function(x) as.numeric(as.character(x)))
adults[ , c(2:16)] <- apply(adults[ , c(2:16)], 2, function(x) as.numeric(as.character(x)))
adults$adults <- floor(rowSums(adults[,-1],na.rm = T))
View(adults)
adultsLga <- adults %>% select(lgaCode,adults)
save(adultsLga,file='./dataExtract/r-data/adultsLga.dat')
# load profits per LGA
filePath <- 'dataExtract/clubs/'
fileName <- 'clubs-gaming-machine-lga-report-20201201-to-20210531.xlsx'
rawNetProfit <- read_xlsx(path = paste(filePath,fileName,sep=''),sheet='Clubs', skip = 3)
rawNetProfit <- rawNetProfit %>%
arrange(desc(`Net Profit`)) %>%
mutate(rank = row_number()-1,
profit = dollar(round(`Net Profit`/1000)*1000),
tax = dollar(round(Tax/1000)*1000))
# Assign NSW Total
rawNetProfit$`Local Government Area (LGA)`[is.na(rawNetProfit$`Local Government Area (LGA)`)] <- 'NSW'
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(lgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(lgaName) %>%
filter(lgaName != "")
# Add the LGA codes
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
# Patch names on the Pokies reports
addShire <- c('Greater Hume','Sutherland','The Hills','Upper Hunter','Upper Lachlan','Warrumbungle');
addRegional <- c('Queanbeyan-Palerang','Bathurst','Armidale','Snowy Monaro','Cootamundra-Gundagai')
addValley <- c('Nambucca')
recode <- 'Unincorporated Far West'
expandNetProfit <- expandNetProfit %>%
mutate(lgaName = if_else(lgaName %in% addShire,paste(lgaName,'Shire'),lgaName),
lgaName = if_else(lgaName %in% addRegional,paste(lgaName,'Regional'),lgaName),
lgaName = if_else(lgaName %in% addValley,paste(lgaName,'Valley'),lgaName),
lgaName = if_else(lgaName %in% recode,'Unincorporated NSW',lgaName))
# merge on LGA code
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
expandNetProfit <- expandNetProfit %>%
mutate(lgaIdNSW = if_else(lgaName=='NSW','nsw',lgaIdNSW),
lgaNameCombine = `Local Government Area (LGA)`)
# load up the Adult population per LGA
load(file='./dataExtract/r-data/adultsLga.dat')
View(adultsLga)
expandNetProfit <- left_join(expandNetProfit,adultsLga,by=c('lgaIdNSW','lgaCode'))
last_error()
expandNetProfit <- left_join(expandNetProfit,adultsLga,by=c('lgaIdNSW'='lgaCode'))
View(expandNetProfit)
sum(adultsLga$adults)
nsw <- data.frame(lgaCode='nsw',adults=sum(adultsLga$adults))
View(nsw)
adultsLga <- rbind(adultsLga,nsw)
View(adultsLga)
library(readxl)
library(tidyverse)
library(jsonlite)
library(scales)
# load profits per LGA
filePath <- './dataExtract/population/'
fileName <- 'erp-age-sex-lga-2020.xls'
population <- read_xls(path = paste(filePath,fileName,sep=''),sheet='Table 3', skip = 7) %>%
filter(`ASGS 2020` == '1')
dropCols <- c(1,2,4,5,6,7,23)
populationSelect <- population %>%
select(-all_of(dropCols)) %>%
mutate(`18–19`=as.numeric(`15–19`) * 0.2) %>%
select(-`15–19`)
adults <-as.data.frame(populationSelect, char=as.numeric(char)) %>% rename(lgaCode=`...3`)
adults[ , c(2:16)] <- apply(adults[ , c(2:16)], 2, function(x) as.numeric(as.character(x)))
adults$adults <- floor(rowSums(adults[,-1],na.rm = T))
adultsLga <- adults %>% select(lgaCode,adults)
nsw <- data.frame(lgaCode='nsw',adults=sum(adultsLga$adults))
adultsLga <- rbind(adultsLga,nsw)
save(adultsLga,file='./dataExtract/r-data/adultsLga.dat')
# load profits per LGA
filePath <- 'dataExtract/clubs/'
fileName <- 'clubs-gaming-machine-lga-report-20201201-to-20210531.xlsx'
rawNetProfit <- read_xlsx(path = paste(filePath,fileName,sep=''),sheet='Clubs', skip = 3)
rawNetProfit <- rawNetProfit %>%
arrange(desc(`Net Profit`)) %>%
mutate(rank = row_number()-1,
profit = dollar(round(`Net Profit`/1000)*1000),
tax = dollar(round(Tax/1000)*1000))
# Assign NSW Total
rawNetProfit$`Local Government Area (LGA)`[is.na(rawNetProfit$`Local Government Area (LGA)`)] <- 'NSW'
# Split Rows where boundaries have been colapsed
expandNetProfit <- rawNetProfit %>%
mutate(lgaName = strsplit(`Local Government Area (LGA)`, "\r\n")) %>%
unnest(lgaName) %>%
filter(lgaName != "")
# Add the LGA codes
load(file='./dataExtract/r-data/lgaNSW.dat')
lgaNSW$lgaNameClean <- str_remove_all(lgaNSW$lgaNamesNSW,pattern="( \\s*\\([^\\)]+\\))")
lgaNSW <- lgaNSW %>% select(-lgaNamesNSW)
# Patch names on the Pokies reports
addShire <- c('Greater Hume','Sutherland','The Hills','Upper Hunter','Upper Lachlan','Warrumbungle');
addRegional <- c('Queanbeyan-Palerang','Bathurst','Armidale','Snowy Monaro','Cootamundra-Gundagai')
addValley <- c('Nambucca')
recode <- 'Unincorporated Far West'
expandNetProfit <- expandNetProfit %>%
mutate(lgaName = if_else(lgaName %in% addShire,paste(lgaName,'Shire'),lgaName),
lgaName = if_else(lgaName %in% addRegional,paste(lgaName,'Regional'),lgaName),
lgaName = if_else(lgaName %in% addValley,paste(lgaName,'Valley'),lgaName),
lgaName = if_else(lgaName %in% recode,'Unincorporated NSW',lgaName))
# merge on LGA code
expandNetProfit <- left_join(expandNetProfit,lgaNSW, by=c("lgaName"="lgaNameClean"))
expandNetProfit <- expandNetProfit %>%
mutate(lgaIdNSW = if_else(lgaName=='NSW','nsw',lgaIdNSW),
lgaNameCombine = `Local Government Area (LGA)`)
# load up the Adult population per LGA
load(file='./dataExtract/r-data/adultsLga.dat')
expandNetProfit <- left_join(expandNetProfit,adultsLga,by=c('lgaIdNSW'='lgaCode'))
View(expandNetProfit)
View(adultsLga)
View(expandNetProfit)
expandNetProfit <- expandNetProfit %>%
mutate(featuredStat=floor(profit/adults))
expandNetProfit <- expandNetProfit %>%
mutate(featuredStat=floor(`Net Profit`/adults))
View(expandNetProfit)
expandNetProfit <- expandNetProfit %>%
mutate(featuredStat=floor(`Net Profit`/adults/$18))
expandNetProfit <- expandNetProfit %>%
mutate(featuredStat=floor(`Net Profit`/adults/18))
View(expandNetProfit)
# prepare data for JSON dump
keepLGAData <- expandNetProfit %>%
select(lgaIdNSW,
lgaName,
lgaNameCombine,
adults,
rank,
profit,
tax,
featuredStat,
`Premises Count`,
`Electronic Gaming Machine numbers\r\nas at 30 May 2021`) %>%
rename(EGMs=`Electronic Gaming Machine numbers\r\nas at 30 May 2021`,
premisesCount=`Premises Count`);
View(keepLGAData)
hist(keepLGAData$featuredStat)
hist(keepLGAData$featuredStat[keepLGAData$featuredStat<150])
hist(keepLGAData$featuredStat[keepLGAData$featuredStat<60])
hist(keepLGAData$featuredStat[keepLGAData$featuredStat<60],bin=10)
hist(keepLGAData$featuredStat[keepLGAData$featuredStat<60],breaks=10)
View(keepLGAData)
